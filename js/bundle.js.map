{"version":3,"file":"./js/bundle.js","mappings":"mBACA,MAAMA,EAAQC,SAASC,cAAc,iBAC/BC,EAASF,SAASC,cAAc,WAChCE,EAAUH,SAASC,cAAc,YACjCG,EAAKJ,SAASC,cAAc,oBAY5BI,EAVN,SAAkBC,EAAIC,GACpB,IAAIC,EACJ,OAAO,WAAmB,QAAAC,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAEtB,OADAC,aAAaP,GACN,IAAIQ,SAASC,IAClBT,EAAWU,YAAW,IAAMD,EAAQX,EAAGa,KAAKC,QAASR,KAAQL,EAAa,GAE9E,CACF,CAEqBC,EAAUa,GACtBL,QAAQC,UACZK,MAAK,IACGC,MACJ,gDAA+CF,gBAChDC,MAAME,IACN,GAAIA,EAASC,GAAI,OAAOD,EAASE,OACjC,MAAM,IAAIC,MAAO,wBAAuBH,EAASI,SAAS,MAG7DC,OAAOC,IAEN,MADA1B,EAAG2B,YAAcD,EACXA,CAAC,KAEV,KAiBH,SAASE,EAAcC,GACjBjC,SAASC,cAAcgC,IACzBjC,SAASC,cAAcgC,GAAIC,QAE/B,CAsBAnC,EAAMoC,iBAAiB,SAAS,KACJ,GAAtBpC,EAAMqC,MAAMzB,QAAiC,KAAlBZ,EAAMqC,MAAM,GACzCJ,EAAe,kBAEfA,EAAe,iBACf3B,EAAaN,EAAMqC,OAAOd,MAAMe,KA9CpC,SAA4Bb,GAC1B,IAAIc,EAAWtC,SAASuC,cAAe,OACvCD,EAASE,UAAUC,IAAK,gBACxBjB,EAASkB,MAAMC,SAASC,IACtB,MAAMC,EAAmB7C,SAASuC,cAAe,OACjDM,EAAiBL,UAAUC,IAAI,WAC/BI,EAAiBd,YAAca,EAAKE,KACpCD,EAAiBE,QAAQD,KAAOF,EAAKE,KACrCD,EAAiBE,QAAQC,MAAQJ,EAAKI,MAAMC,MAC5CJ,EAAiBE,QAAQG,MAAQN,EAAKO,iBACtCb,EAASc,YAAYP,EAAiB,IAExC3C,EAAOkD,YAAYd,EACrB,CAkCMe,CAAmBhB,EAAI,IAE3B,IAGFrC,SAASmC,iBAAiB,SAAUL,IAC9BA,EAAEwB,OAAOd,UAAUe,SAAU,aAhCnC,SAA0BD,GACxB,IAAIE,EAASxD,SAASuC,cAAe,OACrCiB,EAAOhB,UAAUC,IAAK,gBACtBe,EAAOC,mBACJ,aACA,yDAEsCH,EAAOP,QAAQD,+DACbQ,EAAOP,QAAQC,gEACfM,EAAOP,QAAQG,oOAQ1D/C,EAAQiD,YAAYI,EACtB,CAeIE,CAAiB5B,EAAEwB,QACnBvD,EAAMqC,MAAQ,GACdJ,EAAe,iBACf5B,EAAGuD,MAAMC,QAAU,QAEjB9B,EAAEwB,OAAOd,UAAUe,SAAU,uBAC/BzB,EAAEwB,OAAOO,cAAcA,cAAc3B,SACrC9B,EAAGuD,MAAMC,QAAU,QACrB,G","sources":["webpack://webcore-final/./src/js/index.js"],"sourcesContent":["import '../scss/styles.scss'\r\nconst input = document.querySelector('.search-input')\r\nconst header = document.querySelector('.header')\r\nconst results = document.querySelector('.results')\r\nconst ph = document.querySelector('.results-item-ph')\r\n\r\nfunction debounce(fn, debounceTime) {\r\n  let debounce\r\n  return function (...args) {\r\n    clearTimeout(debounce)\r\n    return new Promise((resolve) => {\r\n      debounce = setTimeout(() => resolve(fn.call(this, ...args)), debounceTime)\r\n    })\r\n  }\r\n}\r\n// https://api.github.com/search/repositories?q=${query}&per_page=5\r\nconst getRepoNames = debounce((query) => {\r\n  return Promise.resolve()\r\n    .then(() => {\r\n      return fetch(\r\n        `https://api.github.com/search/repositories?q=${query}&per_page=5`\r\n      ).then((response) => {\r\n        if (response.ok) return response.json()\r\n        throw new Error(`Something went wrong ${response.status}`)\r\n      })\r\n    })\r\n    .catch((e) => {\r\n      ph.textContent = e\r\n      throw e\r\n    })\r\n}, 400)\r\n\r\nfunction renderAutocomplete(response) {\r\n  let fragment = document.createElement(`div`)\r\n  fragment.classList.add(`ac-container`)\r\n  response.items.forEach((item) => {\r\n    const autocompleteItem = document.createElement(`div`)\r\n    autocompleteItem.classList.add('ac-item')\r\n    autocompleteItem.textContent = item.name\r\n    autocompleteItem.dataset.name = item.name\r\n    autocompleteItem.dataset.owner = item.owner.login\r\n    autocompleteItem.dataset.stars = item.stargazers_count\r\n    fragment.appendChild(autocompleteItem)\r\n  })\r\n  header.appendChild(fragment)\r\n}\r\n\r\nfunction deleteElement(el) {\r\n  if (document.querySelector(el)) {\r\n    document.querySelector(el).remove()\r\n  }\r\n}\r\n\r\nfunction renderResultCard(target) {\r\n  let result = document.createElement(`div`)\r\n  result.classList.add(`results-item`)\r\n  result.insertAdjacentHTML(\r\n    `afterbegin`,\r\n    `\r\n    <div>\r\n      <p class=\"result-name\">Name: <span>${target.dataset.name}</span></p>\r\n      <p class=\"result-owner\">Owner: <span>${target.dataset.owner}</span></p>\r\n      <p class=\"result-stars\">Stars: <span>${target.dataset.stars}</span></p>\r\n    </div>\r\n      <div class=\"close-button close-btn-trigger\">\r\n        <div class=\"close-button-p1 close-btn-trigger\"></div>\r\n        <div class=\"close-button-p2 close-btn-trigger\"></div>\r\n      </div>\r\n  `\r\n  )\r\n  results.appendChild(result)\r\n}\r\n\r\ninput.addEventListener('input', () => {\r\n  if (input.value.length == 0 || input.value[0] == ' ') {\r\n    deleteElement(`.ac-container`)\r\n  } else {\r\n    deleteElement(`.ac-container`)\r\n    getRepoNames(input.value).then((res) => {\r\n      renderAutocomplete(res)\r\n    })\r\n  }\r\n})\r\n\r\ndocument.addEventListener('click', (e) => {\r\n  if (e.target.classList.contains(`ac-item`)) {\r\n    renderResultCard(e.target)\r\n    input.value = ''\r\n    deleteElement(`.ac-container`)\r\n    ph.style.display = 'none'\r\n  }\r\n  if (e.target.classList.contains(`close-btn-trigger`)) {\r\n    e.target.parentElement.parentElement.remove()\r\n    ph.style.display = 'block'\r\n  }\r\n})\r\n"],"names":["input","document","querySelector","header","results","ph","getRepoNames","fn","debounceTime","debounce","_len","arguments","length","args","Array","_key","clearTimeout","Promise","resolve","setTimeout","call","this","query","then","fetch","response","ok","json","Error","status","catch","e","textContent","deleteElement","el","remove","addEventListener","value","res","fragment","createElement","classList","add","items","forEach","item","autocompleteItem","name","dataset","owner","login","stars","stargazers_count","appendChild","renderAutocomplete","target","contains","result","insertAdjacentHTML","renderResultCard","style","display","parentElement"],"sourceRoot":""}